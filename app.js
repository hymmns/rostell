class Key {
  constructor(name, type) {
    this.name = name;
    this.type = type;
  }
}

const keyObjArr = [
  new Key('SHOLADOYE', 'bar'),
  new Key('MAYOWA', 'sup'),
  new Key('OPEYEMI', 'rep'),
  new Key('EDIM', 'rep'),
  new Key('OMOLOLA', 'rep'),
  new Key('AINA', 'rep'),
  new Key('ROSEMARY', 'rep'),
  new Key('DELE', 'bar'),
  new Key('DARE', 'bar'),
  new Key('GBENGA', 'bar'),
  new Key('DAMI', 'bar'),
  new Key('JOSHUA', 'bar'),
  new Key('MAGDALENE', 'bar'),
  new Key('GABRIEL', 'bar'),
  new Key('LOLA', 'bar'),
  new Key('WEEK/', 'date'),
  new Key('DATE', 'date'),
];

const data = [
  [],
  [],
  [
    44256
  ],
  [
    "WEEK/",
    "M",
    "TU",
    "W",
    "TH",
    "F",
    "SA",
    "SU",
    "M",
    "TU",
    "W",
    "TH",
    "F",
    "SA",
    "SU",
    "M",
    "TU",
    "W",
    "TH",
    "F",
    "SA",
    "SU",
    "M",
    "TU",
    "W",
    "TH",
    "F",
    "SA",
    "SU",
    "M",
    "TU",
    "W"
  ],
  [
    "DATE",
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31
  ],
  [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "S"
  ],
  [
    "MAYOWA",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M"
  ],
  [],
  [
    "EDIM",
    "M",
    "M",
    "O",
    "M",
    "M",
    "M",
    "O",
    "M",
    "M",
    "M",
    "O",
    "M",
    "O",
    "O",
    "M",
    "M",
    "O",
    "M",
    "O",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O"
  ],
  [
    "OMOLOLA",
    "O",
    "N",
    "N",
    "O",
    "N",
    "O",
    "O",
    "M",
    "N",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "O",
    "N",
    "O",
    "M",
    "O",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "O"
  ],
  [
    "AINA",
    "O",
    "O",
    "M",
    "N",
    "O",
    "O",
    "PH",
    "N",
    "O",
    "O",
    "M",
    "N",
    "O",
    "O",
    "N",
    "H",
    "H",
    "H",
    "M",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "M",
    "O",
    "O",
    "O",
    "N",
    "N"
  ],
  [
    "OPEYEMI",
    "N",
    "O",
    "O",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "N",
    "O",
    "M",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M"
  ],
  [
    "ROSEMARY",
    "M",
    "M",
    "M",
    "O",
    "O",
    "M",
    "O",
    "O",
    "M",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "O",
    "O",
    "N",
    "O",
    "M",
    "M",
    "O",
    "O"
  ],
  [],
  [
    "DELE",
    "O",
    "O",
    "M",
    "N",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M"
  ],
  [
    "DARE",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "O",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "M",
    "O",
    "O",
    "O",
    "M",
    "M",
    "M",
    "N",
    "O",
    "O"
  ],
  [
    "DAMI",
    "O",
    "O",
    "O",
    "M",
    "O",
    "N",
    "O",
    "O",
    "M",
    "O",
    "M",
    "O",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "O",
    "O",
    "N",
    "N",
    "O",
    "M",
    "M"
  ],
  [
    "GBENGA",
    "O",
    "M",
    "N",
    "O",
    "N",
    "O",
    "O",
    "M",
    "O",
    "N",
    "N",
    "O",
    "N",
    "O",
    "O",
    "M",
    "N",
    "O",
    "O",
    "M",
    "O",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "M"
  ],
  [
    "JOSHUA",
    "O",
    "N",
    "O",
    "O",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "N",
    "O",
    "N",
    "N",
    "O",
    "O",
    "O",
    "M",
    "O",
    "M",
    "N",
    "O",
    "O",
    "M",
    "O",
    "O",
    "N",
    "O",
    "O",
    "N"
  ],
  [
    "MAGDALENE",
    "N",
    "O",
    "M",
    "M",
    "N",
    "O",
    "O",
    "M",
    "O",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "H",
    "N",
    "O",
    "O",
    "M",
    "O",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "O",
    "N"
  ],
  [
    "GABRIEL",
    "M",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "O",
    "O",
    "M",
    "N",
    "O",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "N",
    "N",
    "O"
  ],
  [
    "SHOLADOYE",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "O",
    "M",
    "N",
    "N",
    "O",
    "O",
    "O",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "M",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M",
    "M",
    "O",
    "N",
    "O"
  ],
  [
    "LOLA",
    "H",
    "H",
    "H",
    "H",
    "H",
    "O",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "M",
    "M",
    "N",
    "O",
    "M",
    "M",
    "M",
    "N",
    "N",
    "O",
    "O",
    "N",
    "N",
    "O",
    "O",
    "M",
    "M",
    "O",
    "O"
  ],
  [],
  [],
  [],
  [],
  [
    "ALOY",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O"
  ],
  [
    "SHOLA",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O"
  ],
  [
    "JOYCE",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O"
  ],
  [],
  [
    "GEORGE",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD"
  ],
  [
    "IFEOMA",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD"
  ],
  [
    "TESSY",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD",
    "O",
    "AD"
  ]
];
const d = new Date();
const month = [
  'JAN',
  'FEB',
  'MAR',
  'APR',
  'MAY',
  'JUNE',
  'JULY',
  'AUG',
  'SEPT',
  'OCT',
  'NOV',
  'DEC',
];

const createHtmlTable = (data, keyObjArr) => {
  let prevClass = '';
  document.getElementById('mon').innerHTML = `${month[d.getMonth()]}
	-${d.getFullYear()}`;

  data.map((val) => {
    const tbRow = document.createElement('tr');

    keyObjArr.map((key) => {
      if (val[0] === key.name)
        val.map((innerVal, index) => {
          const tbData = document.createElement('td');
          tbData.innerHTML =
            typeof innerVal === 'object'
              ? `<td></td>`
              : `<td><strong>${innerVal}</strong></td>`;
          if (index === d.getDate()) tbData.setAttribute('class', 'active');
          tbRow.appendChild(tbData);

          const rowGroup = document.createElement('tbody');
          rowGroup.setAttribute('id', `${key.type}Id`);
          if (prevClass !== key.type) {
            rowGroup.setAttribute('class', `${key.type}`);
            rowGroup.appendChild(tbRow);
            prevClass = key.type;
            document.getElementById('data').appendChild(rowGroup);
          } else {
            document.getElementById(`${key.type}Id`).appendChild(tbRow);
          }
        });
    });

  });

};

const startSW = () => {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('./sw.js');
    console.log('service worker detected');
  }
};

createHtmlTable(data, keyObjArr);
startSW();
